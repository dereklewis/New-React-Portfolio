{"version":3,"sources":["components/NavBar/NavBar.js","components/Footer/Footer.js","components/assets/headshotround.jpg","Pages/AboutMe.js","components/assets/concert.png","components/assets/gitoutside.png","components/assets/workout.png","components/assets/lyrific.png","Pages/Portfolio.js","Pages/Resume.js","components/assets/fullbody.jpeg","Pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","fixed","id","Container","className","to","Nav","activeKey","Item","Footer","variant","href","AboutMe","src","YourImage","fluid","Project","Row","Col","xs","Card","style","width","Img","Concert","Body","Title","Text","Button","Workout","GitOutside","Lyrific","Resume","target","Home","classname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","token","localStorage","getItem","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","Portfolio","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36eeb522.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"../NavBar/NavBar.css\";\n\nexport const NavBar = () => {\n  return (\n    <>\n      <Navbar bg=\"dark\" fixed=\"top\" id=\"#nav-bar\">\n        <Container className=\"justify-content-right\">\n          <Link to=\"/aboutme\" className=\"brandName\">\n            Derek Lewis\n          </Link>\n          <Nav className=\"justify-content-center\" activeKey=\"/home\">\n            <Nav.Item>\n              <Link to=\"/New-React-Portfolio\" className=\"navLink\">\n                About Me\n              </Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Link to=\"/portfolio\" className=\"navLink\">\n                Portfolio\n              </Link>\n            </Nav.Item>\n            {/* <Nav.Item>\n              <Link to=\"/contact\" className=\"navLink\">\n                Contact\n              </Link>\n            </Nav.Item> */}\n            <Nav.Item>\n              <Link to=\"/resume\" className=\"navLink\">\n                Resume\n              </Link>\n            </Nav.Item>\n          </Nav>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { ExternalLink } from \"react-external-link\";\nimport \"../Footer/Footer.css\";\n\nexport const Footer = () => {\n  return (\n    <>\n      <Navbar bg=\"dark\" variant=\"light\" fixed=\"bottom\">\n        <Container className=\"flexContainer\">\n          <Nav className=\"footerNav\">\n            <Nav.Item>\n              <ExternalLink\n                href=\"https://www.linkedin.com/in/derek-lewis-62343511/\"\n                className=\"navLink\"\n              >\n                <span>LinkedIn</span>\n              </ExternalLink>\n            </Nav.Item>\n            <Nav.Item>\n              <ExternalLink\n                href=\"https://github.com/dereklewis\"\n                className=\"navLink\"\n              >\n                <span>Github</span>\n              </ExternalLink>\n            </Nav.Item>\n            <Nav.Item>\n              <ExternalLink\n                href=\"https://stackoverflow.com/users/16268162/derek\"\n                className=\"navLink\"\n              >\n                <span>Stack Overflow</span>\n              </ExternalLink>\n            </Nav.Item>\n          </Nav>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/headshotround.edb29c46.jpg\";","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport YourImage from \"../components/assets/headshotround.jpg\";\n\nconst AboutMe = () => {\n  return (\n    <Container className=\"about-block\">\n      <>\n        <div>\n          <img className=\"image\" src={YourImage} fluid />\n        </div>\n        <p className=\"text\">\n          After 20 years in the hospitality industry I am excited to make a\n          change! I am originally from Binghamton, New York and I love going to\n          see live music, traveling, cooking, golf and team trivia. I now live\n          in beautiful Denver, Colorado. I want to be a web developer because I\n          believe that websites tell the story of who you are to the world and I\n          want to help people tell their best stories.\n        </p>\n\n        <p className=\"text\">Cheers -- Derek</p>\n      </>\n    </Container>\n  );\n};\n\nexport default AboutMe;\n","export default __webpack_public_path__ + \"static/media/concert.f1320da2.png\";","export default __webpack_public_path__ + \"static/media/gitoutside.31e8c326.png\";","export default __webpack_public_path__ + \"static/media/workout.fc06f161.png\";","export default __webpack_public_path__ + \"static/media/lyrific.78b1067c.png\";","import React from \"react\";\nimport { Card, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { ExternalLink } from \"react-external-link\";\nimport Concert from \"../components/assets/concert.png\";\nimport GitOutside from \"../components/assets/gitoutside.png\";\nimport Workout from \"../components/assets/workout.png\";\nimport Lyrific from \"../components/assets/lyrific.png\";\n\nconst Project = () => {\n  return (\n    <Container className=\"portfolio-cards\">\n      <Row>\n        <div className=\"spacingDiv\"></div>\n        <Col xs={6}>\n          {/* <div className=\"flex-d flex-wrap justify-content-center\"></div> */}\n          <Card style={{ width: \"30rem\" }}>\n            <Card.Img variant=\"top\" src={Concert} />\n            <Card.Body>\n              <Card.Title className=\"cardTitle\">Concert Carpool</Card.Title>\n              <Card.Text className=\"card-text\">\n                Going to live concerts can be incredibly enriching and\n                fulfilling events. However, getting to the venue and back home\n                safely is usually a difficult situation to navigate. While \"Ride\n                Sharing\" services seem like a suitable alternative to driving\n                yourself, often times it comes at a great cost, you are unable\n                to locate your driver in a sea of fans or there is not enough\n                bandwith to properly load the app. That is why we created\n                Concert Carpool. Concert Carpool is a full stack web application\n                designed to connect people who truly want to share rides. You\n                can find like-minded people close to your neighborhood to get a\n                ride with or ride with you to your favorite concert. Who knows,\n                you may even find a new best friend in the process.\n              </Card.Text>\n              <Card.Text className=\"card-text\">\n                This is a full stack application built using the MERN stack. We\n                utilized the SeatGeek API to automatically pull the local event\n                information and populate the site. MongoDB Atlas is used to\n                retain user data. The user verification is done with JSON web\n                tokens.\n              </Card.Text>\n              <Button className=\"gitButton\" variant=\"primary\">\n                <ExternalLink href=\"https://github.com/dereklewis/New-React-Portfolio\">\n                  <span className=\"navButtonText\">GitHub Repository</span>\n                </ExternalLink>\n              </Button>\n              <Button className=\"siteButton\" variant=\"primary\">\n                <ExternalLink href=\"https://boiling-reef-48460.herokuapp.com/\">\n                  <span className=\"navButtonText\">Visit Concert Carpool</span>\n                </ExternalLink>\n              </Button>\n            </Card.Body>\n          </Card>\n\n          <Card style={{ width: \"30rem\" }}>\n            <Card.Img variant=\"top\" src={Workout} />\n            <Card.Body>\n              <Card.Title className=\"cardTitle\">Workout Tracker</Card.Title>\n              <Card.Text>\n                This application was built to track users workout data. The user\n                is able to enter in various workout activities which are broken\n                down into resistance and cardio categories. From there, the user\n                can track weight, sets, repatitions, duration and milage. The\n                application then aggregates the totals for the user to see\n                across time.\n              </Card.Text>\n              <Card.Text>\n                The full stack application was built using HTML and CSS on the\n                front end and Mongoose for the back end.\n              </Card.Text>\n              <Button className=\"gitButton\" variant=\"primary\">\n                <ExternalLink href=\"https://github.com/dereklewis/Workout-tracker\">\n                  <span className=\"navButtonText\">GitHub Repository</span>\n                </ExternalLink>\n              </Button>\n              <Button className=\"siteButton\" variant=\"primary\">\n                <ExternalLink href=\"https://agile-sierra-81172.herokuapp.com/?id=6160c58e39f1400016275b76\">\n                  <span className=\"navButtonText\">Visit Workout Tracker</span>\n                </ExternalLink>\n              </Button>\n            </Card.Body>\n          </Card>\n          <div className=\"spacingDiv\"></div>\n\n          {/* <Card style={{ width: \"30rem\" }}>\n            <Card.Img variant=\"top\" src={Lyrific} />\n            <Card.Body>\n              <Card.Title className=\"cardTitle\">Lyrific</Card.Title>\n              <Card.Text>\n                The Lyrific application was designed to help Karaoke aficionados\n                find lyrics to songs they would like to sing for practice\n                purposes. They can also utilize it as a way to brush up on the\n                lyrics prior to a performance. There is also a current Top 10\n                song list for those who would like to learn the most current\n                hits.\n              </Card.Text>\n              <Card.Text>\n                The application is built simply with HTML, CSS and Javascript.\n                Two APIs are used to pull the lyric information and to populate\n                the Top 10 list. While the lyrics feature only displays 30% of\n                each song, the idea was to pay for the full lyrics once the\n                application was monetized.\n              </Card.Text>\n              <Button className=\"gitButton\" variant=\"primary\">\n                <ExternalLink href=\"https://github.com/dereklewis/music-project-main\">\n                  <span className=\"navButtonText\">GitHub Repository</span>\n                </ExternalLink>\n              </Button>\n              <Button className=\"siteButton\" variant=\"primary\">\n                <ExternalLink href=\"https://dereklewis.github.io/music-project-main/\">\n                  <span className=\"navButtonText\">Visit Lyrific</span>\n                </ExternalLink>\n              </Button>\n            </Card.Body>\n          </Card> */}\n        </Col>\n        <Col id=\"portfolio-column\">\n          <Card style={{ width: \"30rem\" }}>\n            <Card.Img variant=\"top\" src={GitOutside} />\n            <Card.Body>\n              <Card.Title className=\"cardTitle\">Git Outside</Card.Title>\n              <Card.Text>\n                Outdoor activities experience a significant uptick since the\n                beginning of the pandemic. Camping is perfect for social\n                distancing while still letting people get out of the house. As a\n                result, campsites have been used more than ever and it has\n                created a need for more campsites to get on the map. Git Outside\n                was created to allow campers to share their feedback on\n                campsites all over the country so that others can enjoy the best\n                that the great outdoors has to offer.\n              </Card.Text>\n              <Card.Text>\n                The technologies used to create this application were HTML, CSS,\n                Bootswatch, NodeJS, Heroku, MySQL Workbench, MySQL@, Handlebars,\n                Cloudinaary, JawsDB and ExpressJs.\n              </Card.Text>\n              <Button className=\"gitButton\" variant=\"primary\">\n                <ExternalLink href=\"https://github.com/dereklewis/Git-Outside\">\n                  <span className=\"navButtonText\">GitHub Repository</span>\n                </ExternalLink>\n              </Button>\n              <Button className=\"siteButton\" variant=\"primary\">\n                <ExternalLink href=\"https://git-outside.herokuapp.com/\">\n                  <span className=\"navButtonText\">Visit Git Outside</span>\n                </ExternalLink>\n              </Button>\n            </Card.Body>\n          </Card>\n          <Card style={{ width: \"30rem\" }}>\n            <Card.Img variant=\"top\" src={Lyrific} />\n            <Card.Body>\n              <Card.Title className=\"cardTitle\">Lyrific</Card.Title>\n              <Card.Text>\n                The Lyrific application was designed to help Karaoke aficionados\n                find lyrics to songs they would like to sing for practice\n                purposes. They can also utilize it as a way to brush up on the\n                lyrics prior to a performance. There is also a current Top 10\n                song list for those who would like to learn the most current\n                hits.\n              </Card.Text>\n              <Card.Text>\n                The application is built simply with HTML, CSS and Javascript.\n                Two APIs are used to pull the lyric information and to populate\n                the Top 10 list. While the lyrics feature only displays 30% of\n                each song, the idea was to pay for the full lyrics once the\n                application was monetized.\n              </Card.Text>\n              <Button className=\"gitButton\" variant=\"primary\">\n                <ExternalLink href=\"https://github.com/dereklewis/music-project-main\">\n                  <span className=\"navButtonText\">GitHub Repository</span>\n                </ExternalLink>\n              </Button>\n              <Button className=\"siteButton\" variant=\"primary\">\n                <ExternalLink href=\"https://dereklewis.github.io/music-project-main/\">\n                  <span className=\"navButtonText\">Visit Lyrific</span>\n                </ExternalLink>\n              </Button>\n            </Card.Body>\n          </Card>\n          {/* <Card style={{ width: \"30rem\" }}>\n            <Card.Img variant=\"top\" src={NoteTaker} />\n            <Card.Body>\n              <Card.Title className=\"cardTitle\">Note Taker</Card.Title>\n              <Card.Text>Description goes here</Card.Text>\n              <Button className=\"gitButton\" variant=\"primary\">\n                <ExternalLink href=\"https://github.com/dereklewis/note-taker/settings\">\n                  <span className=\"navButtonText\">Visit Note Taker</span>\n                </ExternalLink>\n              </Button>\n              <Button className=\"siteButton\" variant=\"primary\">\n                <ExternalLink href=\"https://obscure-journey-60350.herokuapp.com/\">\n                  <span className=\"navButtonText\">Visit Note Taker</span>\n                </ExternalLink>\n              </Button>\n            </Card.Body>\n          </Card>\n\n          <Card style={{ width: \"30rem\" }}>\n            <Card.Img variant=\"top\" src={DayPlanner} />\n            <Card.Body>\n              <Card.Title className=\"cardTitle\">Day Planner</Card.Title>\n              <Card.Text>Description goes here</Card.Text>\n              <Button className=\"gitButton\" variant=\"primary\">\n                <ExternalLink href=\"https://github.com/dereklewis/day-planner\">\n                  <span className=\"navButtonText\">Visit Day Planner</span>\n                </ExternalLink>\n              </Button>\n              <Button className=\"siteButton\" variant=\"primary\">\n                <ExternalLink href=\"https://dereklewis.github.io/day-planner/\">\n                  <span className=\"navButtonText\">Visit Day Planner</span>\n                </ExternalLink>\n              </Button>\n            </Card.Body>\n          </Card> */}\n        </Col>\n        {/* </div>\n        </div> */}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Project;\n","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Button } from \"react-bootstrap\";\n// import ButtonMailto from \"./MailToButton\";\n// import AllPagesPDFViewer from \"../components/pdf/all-pages\";\n// import samplePDF from \"../components/derekresume.docx.pdf\";\n\nconst Resume = () => {\n  return (\n    <Container className=\"resume-block\">\n      <>\n        <div>\n          <Button\n            className=\"resumeButton\"\n            href=\"https://drive.google.com/file/d/1_3A9yxtqV1amNaLuWnGXHJgKU_bNQ7sc/view?usp=sharing\"\n            target=\"_blank\"\n          >\n            Download Derek's Resume\n          </Button>{\" \"}\n        </div>\n        <div>\n          <Button\n            className=\"mailTo\"\n            href=\"mailto:derek.lewis513@gmail.com\"\n            target=\"_blank\"\n          >\n            E-Mail Derek\n          </Button>{\" \"}\n        </div>\n      </>\n    </Container>\n  );\n};\n\nexport default Resume;\n","export default __webpack_public_path__ + \"static/media/fullbody.cb34a409.jpeg\";","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport YourImage from \"../components/assets/fullbody.jpeg\";\n\nconst Home = () => {\n  return (\n    <Container\n      className=\"homeContainer\"\n      // style={{\n      //   display: \"Flex\",\n      //   backgroundImage: \"url(${ CloudImage })\",\n      // }}\n    >\n      {/* <Row xs={4} classname=\"image-row\"> */}\n      <div classname=\"image-div\">\n        <img className=\"image\" src={YourImage} fluid />\n      </div>\n      {/* </Row> */}\n      {/* <Row xs={8} classname=\"text-row\"> */}\n      {/* <image classname=\"cloud-image\" src={CloudImage} fluid /> */}\n      <div className=\"textDiv\">\n        {/* <p className=\"text\"> */}I am a Full Stack Web Developer with a Web\n        Development Certificate from the University of Denver. Experienced at\n        building full stack web applications from the ground up utilizing the\n        MERN stack and other frameworks/libraries and databases. Adept at\n        working within diverse groups of all sizes. Strong interpersonal skills\n        and a team player that is passionate about the success of the\n        organization. Experience with large complex projects with multiple\n        stakeholders such as new restaurant/hotel openings and transitions.\n        {/* </p> */}\n      </div>\n      {/* </Row> */}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Navbar from \"./components/NavBar/NavBar\";\nimport Footer from \"./components/Footer/Footer\";\n\n// import ContactForm from \"./components/Contact Form/ContactForm\";\nimport AboutMe from \"./Pages/AboutMe\";\nimport Portfolio from \"./Pages/Portfolio\";\nimport Resume from \"./Pages/Resume\";\nimport Home from \"./Pages/Home\";\nimport \"./App.css\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\"></div>\n        <Navbar />\n        <div className=\"container\"></div>\n        <Switch>\n          <Route exact path=\"/New-React-Portfolio\">\n            <Home />\n          </Route>\n          <Route exact path=\"/aboutme\">\n            <AboutMe />\n          </Route>\n          <Route exact path=\"/portfolio\">\n            <Portfolio />\n          </Route>\n          {/* <Route exact path=\"/contact\">\n            <ContactForm />\n          </Route> */}\n          <Route exact path=\"/resume\">\n            <Resume />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./custom.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}